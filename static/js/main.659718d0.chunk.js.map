{"version":3,"sources":["components/Burger.tsx","components/ReceiptPrice.tsx","scripts/Storage.ts","components/LevelBar.tsx","components/Upgrade.tsx","components/Layout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Burger","createRef","sound","Audio","upgradesList","props","upgradesDisplay","reverse","ref","this","onClick","onMouseDown","current","style","transform","currentTime","play","onMouseUp","className","map","i","Component","ReceiptPrice","amount","item","price","structure","clicks","booster","xp","level","money","upgrades","upgradeDisplay","localStorage","getItem","setItem","JSON","stringify","parse","data","get","LevelBar","data-xp","width","Math","round","Upgrade","Purchase","bind","alert","title","toLowerCase","length","shift","updateState","Storage","set","console","log","short","Layout","BurgerClick","s","state","cps","setInterval","setState","additionalClicks","cheese","text","x","y","temp","document","createElement","innerHTML","position","top","random","left","classList","add","querySelector","appendChild","setTimeout","remove","u","patty","lettuce","UpgradesConfig","xpIncrease","Number","toFixed","substr","id","getBurgerHeight","upgradesToPrice","upgradeId","e","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.659718d0.chunk.js","sourcesContent":["import React, { Component, createRef, MouseEvent, RefObject } from 'react'\r\n\r\ninterface props {onClick: (e: MouseEvent<HTMLDivElement>) => void, upgrades: { patty: number, cheese: number, lettuce: number }, upgradesDisplay: string[]}\r\n\r\nexport default class Burger extends Component<props> {\r\n    private Burger = createRef() as RefObject<HTMLDivElement>\r\n    private sound = new Audio(\"/clicker-JacobWennebro/click.mp3\");\r\n    private upgradesList = this.props.upgradesDisplay.reverse();\r\n\r\n    render() {\r\n\r\n        const mouseDown = () => {\r\n            if(this.Burger.current) this.Burger.current.style.transform = \"scale(1.1) translateY(-50%)\";\r\n            this.sound.currentTime = 0.1;\r\n            this.sound.play();\r\n        }\r\n\r\n        return (\r\n            <div ref={this.Burger} onClick={this.props.onClick} onMouseDown={mouseDown} onMouseUp={() => this.Burger.current ? this.Burger.current.style.transform = \"\" : \"\"} className=\"burger\">\r\n                <div className=\"burger__bun top burger-item\"></div>\r\n\r\n                {this.upgradesList.map((i => \r\n                    <div className={`burger__${i} burger-item`}></div>\r\n                ))}\r\n                \r\n\r\n                {/* Defaults */}\r\n                <div className=\"burger__cheese burger-item\"></div>\r\n                <div className=\"burger__patty burger-item\"></div>\r\n\r\n                <div className=\"burger__bun bottom burger-item\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ReceiptPrice extends Component<{amount: number, item: string, price: number}> {\r\n    render() {\r\n        if(this.props.amount <= 0) return (<></>);\r\n        return (\r\n            <ul>\r\n                <li>{this.props.amount}</li>\r\n                <li>{this.props.item}</li>\r\n                <li>${this.props.price * this.props.amount}</li>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n","class Storage {\r\n    private structure = {\r\n        clicks: 0,\r\n        booster: 0,\r\n        xp: 0,\r\n        level: 1,\r\n        money: 0,\r\n        upgrades: {},\r\n        upgradeDisplay: []\r\n    }\r\n    \r\n    constructor() {\r\n        if(!localStorage.getItem(\"bc-save\")) localStorage.setItem(\"bc-save\", JSON.stringify(this.structure));\r\n    }\r\n\r\n    get() {\r\n        return JSON.parse(localStorage.getItem(\"bc-save\") || \"{}\") as {\r\n            clicks: number,\r\n            booster: number\r\n            xp: number\r\n            level: number\r\n            money: number\r\n            upgrades: {\r\n                patty: number\r\n                cheese: number\r\n                lettuce: number\r\n            },\r\n            upgradeDisplay: string[]\r\n        };\r\n    }\r\n\r\n    set(data: { clicks?: number, booster?: number, xp?: number, level?: number, money?: number, upgrades?: { patty: number, cheese: number, lettuce: number }, upgradeDisplay?: string[] }) {\r\n        localStorage.setItem(\"bc-save\", JSON.stringify({ ...this.get(), ...data }));\r\n    }\r\n}\r\n\r\nexport default (new Storage());","import React, { Component } from 'react'\r\n\r\nexport default class LevelBar extends Component<{xp: number, level: number}> {\r\n    private level = this.props.level;\r\n    \r\n    constructor(props: any) {\r\n        super(props);\r\n        \r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div data-xp={this.props.xp} className=\"level-bar\">\r\n                <div style={{width: (((Math.round(this.props.xp)/(100*this.props.level)) / this.props.level)*100)+\"%\"}} className=\"level-bar__progress\">\r\n                    <span>Level {this.props.level}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Storage from '../scripts/Storage'\r\n\r\ninterface props {title: string, short: string, price: number, updateState: (e: any) => void, upgradeId: string, upgrades: { patty: number, cheese: number, lettuce: number}, money: number, upgradeDisplay: string[]}\r\n\r\nexport default class Upgrade extends Component<props> {\r\n    \r\n    constructor(props: props) {\r\n        super(props);\r\n\r\n        this.Purchase = this.Purchase.bind(this);\r\n\r\n    }\r\n\r\n    Purchase() {\r\n        if(this.props.price > this.props.money) {\r\n            alert(\"You cannot afford \" + this.props.title)\r\n            return;\r\n        }\r\n\r\n        let upgrades = this.props.upgrades;\r\n        // @ts-ignore\r\n        upgrades[this.props.title.toLowerCase()] ? upgrades[this.props.title.toLowerCase()] += 1 : upgrades[this.props.title.toLowerCase()] = 1;\r\n\r\n        if(this.props.upgradeDisplay.length >= 30) this.props.upgradeDisplay.shift();\r\n\r\n        this.props.updateState({ upgrades, money: this.props.money - this.props.price, upgradeDisplay: [...this.props.upgradeDisplay, this.props.title.toLowerCase()] });\r\n        Storage.set({ upgrades, money: this.props.money - this.props.price, upgradeDisplay: [...this.props.upgradeDisplay, this.props.title.toLowerCase()] });\r\n        \r\n        console.log(\"Purchased item \" + this.props.title);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.Purchase} className=\"upgrade\">\r\n                <div>\r\n                    <h2>{this.props.title}</h2>\r\n                    <p>{this.props.short}</p>\r\n                </div>\r\n                <div>\r\n                    <span>${this.props.price}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, MouseEvent } from 'react'\r\nimport Burger from './Burger'\r\nimport ReceiptPrice from './ReceiptPrice'\r\nimport Storage from '../scripts/Storage'\r\nimport LevelBar from './LevelBar';\r\nimport Upgrade from './Upgrade';\r\nimport UpgradesConfig from '../upgrades.json'\r\n\r\ninterface state {\r\n    clicks: number\r\n    cps: number\r\n    xp: number\r\n    level: number\r\n    money: number\r\n    upgradeDisplay: string[],\r\n    upgrades: {\r\n        patty: number\r\n        cheese: number\r\n        lettuce: number\r\n    }\r\n}\r\n\r\nexport default class Layout extends Component<{}, state> {    \r\n    constructor(props: {}) {\r\n        super(props);\r\n\r\n        this.BurgerClick = this.BurgerClick.bind(this);\r\n\r\n        const s = Storage.get();\r\n\r\n        this.state = {\r\n            clicks: s.clicks,\r\n            cps: 0,\r\n            xp: s.xp,\r\n            level: s.level,\r\n            money: s.money,\r\n            upgrades: s.upgrades,\r\n            upgradeDisplay: s.upgradeDisplay\r\n        }\r\n\r\n        setInterval(() => {\r\n            this.setState({ cps: 0 });\r\n\r\n            const additionalClicks = this.state.upgrades.cheese;\r\n            let i=0;\r\n\r\n            while(i < additionalClicks) {\r\n                this.BurgerClick();\r\n                i++;\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    SpawnClickText(text: string, x: number, y: number) {\r\n        const temp = document.createElement(\"span\");\r\n        temp.innerHTML = text;\r\n        temp.style.position = \"absolute\";\r\n        temp.style.top = y-(Math.random() * (1000) - 500)+\"px\";\r\n        temp.style.left = x+(Math.random() * (500) - 700)+\"px\";\r\n        temp.classList.add(\"temp-click-text\");\r\n\r\n        document.querySelector(\".content\")?.appendChild(temp);\r\n\r\n        setTimeout(() => {\r\n            temp.remove();\r\n        }, 4000);\r\n    }\r\n\r\n    getBurgerHeight(u: { patty: number, cheese: number, lettuce: number }) {\r\n        return u ? (u.patty || 0) + ((u.cheese || 0)*0.1) + ((u.lettuce || 0)*0.1) : 0;\r\n    }\r\n    \r\n    upgradesToPrice(upgrades: { patty: number, cheese: number, lettuce: number }) {\r\n        let price = 0;\r\n        price += (upgrades.patty  || 0) * UpgradesConfig.patty.price;\r\n        price += (upgrades.cheese || 0) * UpgradesConfig.cheese.price;\r\n        price += (upgrades.lettuce || 0) * UpgradesConfig.lettuce.price;\r\n        return price;\r\n    }\r\n\r\n    BurgerClick() {\r\n        const lvl = Math.round(this.state.xp)/(100*this.state.level);\r\n\r\n        if(lvl >= this.state.level) {\r\n            Storage.set({ level: this.state.level + 1, xp: 0 });\r\n\r\n            this.setState({\r\n                level: this.state.level + 1,\r\n                xp: 0,\r\n                clicks: this.state.clicks + 1,\r\n                cps: this.state.cps+1\r\n            });\r\n\r\n        } else {\r\n            const xpIncrease = Number((Math.random()*1).toFixed(2).substr(0, 4)) * ((2 * this.state.upgrades.patty) || 1);\r\n\r\n            this.setState({\r\n                clicks: this.state.clicks + 1,\r\n                xp: this.state.xp + xpIncrease,\r\n                cps: this.state.cps+1\r\n            });\r\n\r\n            //this.SpawnClickText(`+${Math.round(xpIncrease)} XP`, 200, 200);\r\n\r\n            Storage.set({ clicks: this.state.clicks, xp: this.state.xp });\r\n        }\r\n\r\n        if((((this.state.clicks+1) / 10) % 1) === 0) {\r\n            this.setState({ money: this.state.money + 1 });\r\n            Storage.set({ money: this.state.money });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"layout\">\r\n                <div className=\"sidebar\">\r\n                    <div>\r\n                        <h1 id=\"title\" className=\"nobold\">Burger Clicker™</h1>\r\n                    </div>\r\n                    <div className=\"receipt\">\r\n                        <h1>Cheese Burger</h1>\r\n                        <h3>{this.state.cps} clicks p/s | Height {Math.round(this.getBurgerHeight(this.state.upgrades))} cm</h3>\r\n\r\n                        <div className=\"receipt__prices\">\r\n\r\n                            <ReceiptPrice item=\"Patty\" price={5} amount={1}/>                        \r\n                            <ReceiptPrice item=\"Cheese\" price={2} amount={1}/> \r\n\r\n                            <ul className=\"receipt__spacer\">\r\n                                <li><p>Extras</p></li>\r\n                                <li></li>\r\n                                <li></li>\r\n                            </ul>\r\n                            <ReceiptPrice item=\"Patty\" price={UpgradesConfig.patty.price} amount={this.state.upgrades.patty || 0}/>                        \r\n                            <ReceiptPrice item=\"Cheese\" price={UpgradesConfig.cheese.price} amount={this.state.upgrades.cheese || 0}/>                        \r\n                            <ReceiptPrice item=\"Lettuce\" price={UpgradesConfig.lettuce.price || 0} amount={this.state.upgrades.lettuce || 0}/>                        \r\n                        \r\n                            <h3 id=\"totalPrice\">Total ${this.upgradesToPrice(this.state.upgrades) + 7}</h3>\r\n                            \r\n                        </div>\r\n\r\n                        <span id=\"barcode\">BURGER CLICKER</span>\r\n                    </div>\r\n                    <div className=\"bank\">\r\n                        <p>Balance: ${this.state.money}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"content\">\r\n\r\n                    <Burger upgrades={this.state.upgrades} onClick={this.BurgerClick} upgradesDisplay={this.state.upgradeDisplay}/>\r\n                    <LevelBar level={this.state.level} xp={this.state.xp}/>\r\n\r\n                </div>\r\n                <div className=\"upgrades\">\r\n                    <h1 className=\"nobold\">Upgrades menu</h1>\r\n                    <div className=\"upgrades__container\">\r\n                        <Upgrade title=\"Patty\" upgradeId=\"patty\" short=\"Doubles the experience points given for every click.\" price={5} updateState={(e) => this.setState(e)} upgrades={this.state.upgrades} money={this.state.money} upgradeDisplay={this.state.upgradeDisplay}/>\r\n                        <Upgrade title=\"Cheese\" upgradeId=\"cheese\" short=\"Get one additional click per second for every slice of this melty goodness.\" price={2} updateState={(e) => this.setState(e)} upgrades={this.state.upgrades} money={this.state.money} upgradeDisplay={this.state.upgradeDisplay}/>\r\n                        <Upgrade title=\"Lettuce\" upgradeId=\"lettuce\" short=\"It may be gross, but this increases the chance of fry rain!\" price={3} updateState={(e) => this.setState(e)} upgrades={this.state.upgrades} money={this.state.money} upgradeDisplay={this.state.upgradeDisplay}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Burger from './components/Burger'\r\nimport Layout from './components/Layout'\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        \r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './style/main.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}